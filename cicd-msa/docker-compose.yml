services:
  msa-discovery:
    image: openjdk:17-jdk
    container_name: msa-discovery
    ports:
      - "9001:9001"
    environment:
      - DISCOVERY_HOSTNAME=${DISCOVERY_HOSTNAME}
    volumes:
      - ../backend-msa/service-discovery/build/libs/service-discovery.jar:/service-discovery.jar
    command: java -jar /service-discovery.jar

  msa-config:
    image: openjdk:17-jdk
    container_name: msa-config
    ports:
      - "9002:9002"
    environment:
      - DISCOVERY_URL=${DISCOVERY_URL}
      - GITHUB_USERNAME=${GITHUB_USERNAME}
      - GITHUB_PASSWORD=${GITHUB_PASSWORD}
    volumes:
      - ../backend-msa/service-config/build/libs/service-config.jar:/service-config.jar
    command: java -jar /service-config.jar

  msa-gateway:
    image: openjdk:17-jdk
    container_name: msa-gateway
    ports:
      - "9090:9090"
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - DISCOVERY_URL=${DISCOVERY_URL}
      - SERVER_PROFILE=${SERVER_PROFILE}
      - CONFIG_SERVER_URL=${CONFIG_SERVER_URL}
    volumes:
      - ../backend-msa/service-gateway/build/libs/service-gateway.jar:/service-gateway.jar
    command: java -jar /service-gateway.jar

  msa-member:
    image: openjdk:17-jdk
    container_name: msa-member
    ports:
      - "9003:9003"
    environment:
      - DISCOVERY_URL=${DISCOVERY_URL}
      - SERVER_PROFILE=${SERVER_PROFILE}
      - CONFIG_SERVER_URL=${CONFIG_SERVER_URL}
    volumes:
      - ../backend-msa/service-member/build/libs/service-member.jar:/service-member.jar
    command: java -jar /service-member.jar

  msa-member-mariadb:
    container_name: msa-member-mariadb
    ports:
      - "9303:3306"
    image: mariadb:latest
    environment:
      - MARIADB_DATABASE=msa_member
      - MARIADB_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
    volumes:
      - ../cicd-msa/mariadb/msa-member:/var/lib/mysql

  msa-frontend:
    container_name: msa-frontend
    ports:
      - 80:80
    image: nginx:latest
    volumes:
      - ../frontend/dist:/usr/share/nginx/html
      - ../cicd-msa/nginx:/etc/nginx/conf.d

  mariadb:
    container_name: mariadb
    ports:
      - 3306:3306
    image: mariadb:latest
    environment:
      - MARIADB_DATABASE=${MARIADB_DATABASE}
      - MARIADB_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
    volumes:
      - ../monolithic/mariadb:/var/lib/mysql

  openvidu:
    image: openvidu/openvidu-dev:2.23.0
    ports:
      - 4443:4443
    environment:
      - OPENVIDU_SECRET=${OPENVIDU_SECRET}

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka1:
    container_name: kafka1
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

#  kafka2:
#    container_name: kafka2
#    image: confluentinc/cp-kafka:latest
#    ports:
#      - "9093:9093"
#    environment:
#      KAFKA_BROKER_ID: 2
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9093
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
#    depends_on:
#      - zookeeper
#
#  kafka3:
#    container_name: kafka3
#    image: confluentinc/cp-kafka:latest
#    ports:
#      - "9094:9094"
#    environment:
#      KAFKA_BROKER_ID: 3
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9094
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9094
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
#    depends_on:
#      - zookeeper
##  axonserver:
#    image: axoniq/axonserver:latest
#    container_name: axonserver
#    ports:
#      - 8024:8024
#      - 8124:8124
#    volumes:
#      - ../msa/axonserver/data:/data
#      - ../msa/axonserver/config:/config
#    environment:
#      - AXONSERVER_NAME=axonserver
#      - AXONSERVER_HOSTNAME=localhost
#    networks:
#      - axon-network
#networks:
#  axon-network:
#    driver: bridge